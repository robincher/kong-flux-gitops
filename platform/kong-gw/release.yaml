apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kong
spec:
  interval: 5m
  chart:
    spec:
      chart: kong
      version: 2.15.1
      sourceRef:
        kind: HelmRepository
        name: kong
        namespace: flux-system
      interval: 1m
  values:
    image:
      repository: kong/kong-gateway
      tag: "3.1.1.3"
    replicaCount: 1
    env:
      prefix: /kong_prefix/
      # Variables to set if you are using external Postgres Database
      database: postgres
      pg_host: kong-db-postgresql.kong-enterprise.svc.cluster.local
      pg_port: 5432
      pg_user: konger
      pg_database: kong # Pre-create in RDS First
      pg_password: 
        valueFrom:
          secretKeyRef:
            name: kong-db-password # Pre-create it
            key: postgresql-password # Pre-create it

      # Logs Output
      log_level: warn
      nginx_worker_processes: "2"
      proxy_access_log: /dev/stdout
      admin_access_log: /dev/stdout
      admin_gui_access_log: /dev/stdout
      portal_api_access_log: /dev/stdout
      proxy_error_log: /dev/stderr
      admin_error_log: /dev/stderr
      admin_gui_error_log: /dev/stderr
      portal_api_error_log: /dev/stderr

      # Admin Setting
      admin_api_uri: http://admin.flux.kongtest.net:8001  # CHANGE ME
      admin_gui_url: http://manager.flux.kongtest.net:8002 # CHANGE ME

      # Portal Setting
      portal_gui_protocol: http
      portal_api_url: http://portalapi.flux.kongtest.net:8004 # CHANGE ME
      portal_gui_host: portal.flux.kongtest.net:8003    # CHANGE ME
      portal_session_conf:
        valueFrom:
          secretKeyRef:
            name: kong-session-config
            key: portal_session_conf

      portal: on

      password: # Set Super Admin Password
        valueFrom:
          secretKeyRef:
            name: kong-enterprise-superuser-password 
            key: password 

    admin:
      enabled: true
      type: LoadBalancer
      annotations: 
        service.beta.kubernetes.io/aws-load-balancer-type: "nlb" 
        service.beta.kubernetes.io/aws-load-balancer-internal: "false"
      tls:
        # Enable HTTPS listen for the admin API
        enabled: true
        servicePort: 8444
        containerPort: 8444
        # Set a target port for the TLS port in the admin API service, useful when using TLS
        # termination on an ELB.
        # overrideServiceTargetPort: 8000
        # Set a nodePort which is available if service type is NodePort
        # nodePort: 32443
        # Additional listen parameters, e.g. "reuseport", "backlog=16384"
        parameters:
        - http2
      http:
      # Enable plaintext HTTP listen for the admin API
      # Disabling this and using a TLS listen only is recommended for most configuration
        enabled: true
        servicePort: 8001
        containerPort: 8001
      # Set a nodePort which is available if service type is NodePort
      # nodePort: 32080
      # Additional listen parameters, e.g. "reuseport", "backlog=16384"
      parameters: []

      ingress:
        enabled: false


    enterprise:
      enabled: true
      # CHANGEME: https://github.com/Kong/charts/blob/main/charts/kong/README.md#kong-enterprise-license
      license_secret: kong-enterprise-license
      vitals:
        enabled: true
      portal:
        enabled: true
      rbac:
        enabled: true
        admin_gui_auth: basic-auth
        session_conf_secret: kong-session-config
        admin_gui_auth_conf_secret: kong-session-config
      smtp:
        enabled: false
    # Specify Kong proxy service configuration
    proxy:
      enabled: true
      type: LoadBalancer # AWS automatically create LB and registered the targets in AWS, you can set R53 for it
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: "nlb" 
        service.beta.kubernetes.io/aws-load-balancer-internal: "false" # Can be set to true for internal lb so that you won't exposed it to the public
      labels:
        enable-metrics: "true"

      http:
        enabled: true
        servicePort: 80
        containerPort: 8000
        parameters: []

      tls:
        enabled: true
        servicePort: 443
        containerPort: 8443
        parameters:
        - http2

    manager:
      enabled: false
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: "nlb" 
        service.beta.kubernetes.io/aws-load-balancer-internal: "false" # Can be set to true for internal lb so that you won't exposed it to the public

      http:
        enabled: true
        servicePort: 8002
        containerPort: 8002
        parameters: []

      tls:
        enabled: true
        servicePort: 8445
        containerPort: 8445
        parameters:
        - http2

      ingress:
        enabled: false
      externalIPs: []

    portal:
      enabled: false
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: "nlb" 
        service.beta.kubernetes.io/aws-load-balancer-internal: "false" # Can be set to true for internal lb so that you won't exposed it to the public

      http:
        enabled: true
        servicePort: 8003
        containerPort: 8003
        parameters: []

      tls:
        enabled: true
        servicePort: 8446
        containerPort: 8446
        parameters:
        - http2

      ingress:
        enabled: false

      externalIPs: []

    portalapi:
      enabled: false
      type: LoadBalancer
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: "nlb" 
        service.beta.kubernetes.io/aws-load-balancer-internal: "false" # Can be set to true for internal lb so that you won't exposed it to the public

      http:
        enabled: true
        servicePort: 8004
        containerPort: 8004
        parameters: []

      tls:
        enabled: true
        servicePort: 8447
        containerPort: 8447
        parameters:
        - http2

      ingress:
        enabled: false

      externalIPs: []

    postgresql:
      enabled: false

    ingressController:
      enabled: false
